.TH "cowbuilder" 8 "2006 Aug 26" "cowdancer" "cowdancer"
.SH "NAME"
cowbuilder \- a pbuilder wrapper for cowdancer.
.SH SYNOPSIS
.BI "cowbuilder [" "commands" "] [" "options" "]"
.SH DESCRIPTION
.B cowbuilder
Executes the specified pbuilder operation with
.B cowdancer

.SH "COMMANDS"

Most commands invoke pbuilder with the specified commands, see
pbuilder manual for details.

.TP
.B "--create"

Create the base.cow image.
The directory for base.cow should be empty, or this command will fail.

.TP
.B "--update"

Update the base.cow image.

.TP
.BI "--build " ".dsc-file"

Build a package given a .dsc file

.TP
.B "--login"

Start a session within the base.cow.

.TP
.B "--execute"

Execute a command within the base.cow.

.SH "OPTIONS"

Most options are the same as pbuilder, except for the following which are handled specially

.TP
.B "--buildplace"

The place where COW operation takes place.

.TP
.B "--basepath" 
has a very different meaning to 
.B basetgz
option of pbuilder, since there is no tgz.  This option specifies the
directory in which the COW master data is stored, the default being 
.B "/var/cache/pbuilder/base.cow"

.SH  "EXAMPLES"

.TP
.B "cowbuilder --create"
Create a base.cow image.

.TP 
.B "cowbuilder --update"
Update the base.cow image.

.TP
.B "cowbuilder --build test_0.1.dsc"
Build the package specified in dsc file, with the base.cow image.

.TP
.B "pdebuild --pbuilder cowbuilder"
Run
.B "cowbuilder --build"
against the current directory.
The current directory should be an extracted Debian source package directory.

.TP
.B "cowbuilder --login --bindmounts /home/dancer"
Start a cow-shell session inside base.cow, with /home/dancer being bind-mounted to within
chroot.

.TP
.B "cowbuilder --create --distribution sid --basepath /var/cache/pbuilder/base-test.cow"
Create a base.cow image with the path 
.B "/var/cache/pbuilder/base-test.cow"
and distribution sid.


.SH "AUTHOR"
Junichi Uekawa (dancer@debian.org)

.SH "SEE ALSO"
.RI "pbuilder (" 8 "), "
.RI "pdebuild (" 1 ") "

